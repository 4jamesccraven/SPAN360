#!/usr/bin/env python3

from argparse import ArgumentParser, Namespace
import os

import stanza
from tqdm import tqdm


def cli() -> Namespace:
    parser = ArgumentParser(__name__)

    return parser.parse_args()


def main() -> None:
    file_names = os.listdir('cleaned_data')
    src_files = [os.path.join('cleaned_data', file) for file in file_names]
    dst_files = [os.path.join('lemmatized_data', file) for file in file_names]

    if not os.path.isdir('lemmatized_data'):
        os.mkdir('lemmatized_data')

    stanza.download('es')

    nlp = stanza.Pipeline(lang='es', processors='tokenize,mwt,pos,lemma')

    iterations = len(src_files)

    for src, dest in tqdm(zip(src_files, dst_files), total=iterations):
        with open(src, 'r', encoding='utf8') as f:
            text = f.read()

        doc = nlp(text)

        with open(dest, 'w', encoding='utf8') as f:
            for sentence in doc.sentences: # type: ignore
                for word in sentence.words:
                    f.write(f'{word.text} -> {word.lemma}\n')


if __name__ == '__main__':
    main()
